%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 180.000000 150.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 11.5.2 (Build 20G95) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 180 150
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 180 150
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin
/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /ellipsis put
dup 34 /S put
dup 35 /o put
dup 36 /f put
dup 37 /t put
dup 38 /m put
dup 39 /a put
dup 40 /x put
dup 41 /z put
dup 42 /one put
dup 43 /two put
dup 44 /three put
dup 45 /parenleft put
dup 46 /parenright put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<





00>] def
/CharStrings 15 dict dup begin
/.notdef 0 def
/parenleft 1 def
/parenright 2 def
/one 3 def
/two 4 def
/three 5 def
/S 6 def
/a 7 def
/f 8 def
/m 9 def
/o 10 def
/t 11 def
/x 12 def
/z 13 def
/ellipsis 14 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] readonly def
/FontBBox {-951 -481 1987 1077} readonly def
/UniqueID 4203806 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB2829599C1DB40C921169FF26E104FB48CECC24574A8196DC855B668A6515558146EC89D2D92513E36C07C89AD5CB9C779B57978000A47F8779569EF0192D5BD6D12FE3CA52A7E56A1AF21AF69B01BEAE625A7AD6999F6BB1BC71CB80212D85582791D10F646B03BDD7F926CF863F075AD114CDC4C54BB36AD373BB223003EEB6089A40D5E97CE2584148AF0562E3D18E6811E58C05B93D873BAC3BED259469672E95A2502B647BCE23971490B270CD03FBCF37ACF0CF73BFAEF075BED73626EDF8024ED1BD811E62A9DE62059E7C540B5E2A8D66CD22EA8D61BE4A230905E271BF2B9DF7331AB7904E923C67C0CE45DB8A47C217C56E15F23810ED7D78EF4F374C727932DDE92F13B1B531BEE52CA3642FF5EE08DF2731BB34F6ACB44E3E265C8F99F778907D039FFC190BED6CD2F62A77DDAFEED4574C86679A01EF9158AE33BC699736899E298FF1BFC2C9D8B0B6B8C34BE9F7C8D7861F55E00D3294A9A3143D02475DFF6C101ED3061706B99F4D6AB26B3C761089F543BE13AB60F3CEA58E0D38319A0CD1F0212C6FB5B01049B4BCF5FC98E371DED4B2DD9A5A960E0EF477B0AF484EEE4F0F7BB0FE3B8835E9649AEDB0AC3BB623DF58D524443754F25CE51A7B6A0D2A517A5EF9664F997F637BD58D26BD6528E5C1917994528E1920E16DF37D2180E8B3C34D3FD9ADEB5AB207A650E2E26BA5895B93D971994AF47851894878C64B62B7F97577BA08A4B635D0D8ACDF2519F796CAA39A5CA5B6672237158889B4059


CE4D4594BC87BAD947643766143B3DDF5AEA2CC253677BC4C1EE2DCB5346183F61C9A0F8C052F416EA930935E0033F6DE70894D18FD5D16AB57455EACD35BC04DF6F1AC7C947030BC49E14F4DF990D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: CMMI10
%!FontType1-1.0: CMMI10 1.100%%CreationDate: 9/26/21% Copyright 2021 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (1.100) readonly def/FullName (CMMI10) readonly def/FamilyName (Computer Modern) readonly def/Weight (SnapShot) readonly def/ItalicAngle -14.04 def/isFixedPitch false def/UnderlinePosition -125 def/UnderlineThickness 31 defend readonly def/FontName /CMMI10 def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /sigma putreadonly def/FontBBox {-32 -250 1048 750} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEF1C23F12D94C18BF0A305FD1589F3966E11AB6BD8EA7F5638CECA92C97FDDCC8757762D01C0B80BB70EB6D5DCDF6CC54AF814ADADE2AAA8734C9DF4996CCC2AFB9267E08066FA3531EF5D1CBDF8DBA3E0E05C7B1F992756F981D266C1508FD2CD3149F4730B0722464DC755A46C47C5313751F39EB8CD2238BE3685B7BEBD0B838991B2C393F53FFC604F32BAF246ECE24405CA34A526B37B4F93099C66AD58CAE4798BDFA7A12E5196D538FF078D225AB7FDFC0AAA7EDC42586D0639EA1523B8BA037B391C569463C86F9A377E82C5D1347594B7BA04600690EA3CD231DF71DE4DD38457F653AD338E3AEBF9378CB68E38DF075F53AAB9D8E48A0F07F03238B5018DB75151B85A6D57AB58C77ADACB4F0053721D68ACA319F7CCB1C303512FA2131E3156477CC4C8AC8CE9592C1A76BA94AE48BCCBDE32725A6D3D48A3D2378089FFFD5B00F02F5314CD3792837D7DAE372E90B8C49AA8A9D39CF9912F60C0BF623499A948E7AC561C9DF9924B1E092D04816C2BE8E33CA292D91537CDF380A20A1B81DFA303E2DD0BAF232A1A7FFFA0C6FC08A833D449AD56FF55625A0004A07DEF8AE0508BB7BDEBB6BFEC81F4C91B1A23CA5B033202DBEAF32854FCF038650DC657D1BCE8B693655DEB9AFE4F9291107D5A5EB742F5E38AD2A6FE936F8273E1094CB47CB41AF5C25BD8EED5D57B358605D0755A0D9BC1640E4D6D4E4E9A5DFA6022E1882E6EA2C201DE73F1152AC286720D8858BA8910211F98A4C2077D23262C7E47FA8D6E30121D3BE9E97F0C41151DC90D59C3D8BF25F589D2A6ABC798C8A3AF939F904E6EF2817F9589400331A8F209817A8090163CB2383EC0EF954151167C2AB0FE7B24918A9D755EB1A596EB468D7A808C793C3D14C6DE8772AFF8EF1A3F13A17FB6D5DCB6F8403DB96F92EFE618353382B03DB684C31D8FB3A6415F80526B7ECA3AAFE9F9E5DE0B2C00D6E46C55FCE90F5C186DFE6247A46AF4A1983AFD4255198F4535F931575E5DEA7C64FB5033046CBA69B554C1C22BA45A2464D1F3C8990D7E3C423B466B698F5E789F50FA6F5785AF9C0502E06D941555243658A60199FABF5DFA04E106F65682B77CC564B377D0C25FC855698DC8E4408C64E08D611CB9E6189EC65EAACA8004E506A0373C1829DC2875713B01F9D9238EC598904BD6F249C462DA9B69CD381CE7EA6AE1AC723980044280008A44B1FC8B5E7124E3B8ABD09F4532A751CE59ADC815481090F3EA5EC4D1B640F40E2B8F57A2BE83688A6B67985F3EA7B8C1CA0F048C643210697BD3D04ABA70CE5A2A221F9E2EB07461392917B4C69BCEBA2FE10D7A61761C480B38ABA9BD06DD76452AEDBBAC38D06509217F3C1AB1E1099304893B2873B3043B23F60A6140FBA7FDC3EBADF3749D7EE4E93676E695AED2A3C17708B2D7366B210934400A1A6570AA97F3E44C4206EF4C528F92FB4040855D54EE8739FB735140A68D62C067A91B1A167A38BC802CB74C145673E5342D39BADD00A39A2D5940ED24DD1B4C5915790AE422A874778183A296E2EE86C2B9E3C3DBE7932645CE0C07BFB5353E5CC0294E565F872720AC5C526881E6AC356FBBAB200B2208F02B2C4870C3C7DAB5268DBD3031FDFE03B25587779C81B9033D5952C4AD731E39BAED6DA2E800B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC906A0E03AB5DA5BC0372DB1CFDE3D89AB2120071EB518A9D44A48D159E79B630B9463F4B8E746FD7B539817A31B09E48CD1617BE5F49CBEF833C9FA5A126D3CCC947A4E785AD9E53A841A8E5D7FCB3D1EE9B3EA4167F1856DF28579439398DBF2338B377374722C74B480A0C84F8751E51F489BE0E331965E872383A0CCD2BBEC2A496A2F47A1E10A1440FA46EBB74CE459BD8EF6F4F8007D3798C3103C74CEB3F31536CF61A0996F198B56FD47718572A6011C016FC1ED51F5A3A1FB828959CD02BADCB89CE4B14504B01423EEF1BA77F2290EF23AF191F204C41C6068A78B9825C257FD95483AFD95FFD9A6408E06625E5B6DEC5EBA05CF601A4BBD39D7569DE76D1D1F2D245478835B4C91B169DB53C283BFF29695AA61CA24BFBEF6E72808A4B82186115E9DECB679B7745D5317A2D6BF18202552E4E7817D556E21654EAF94B240231F166BD7BE68F543D52D39A50F9D54BCF20D96522F5D04A66FCF8C30802CAB7F8D9454D835AE28E18D38C9DDDC4A1913A894FB43F4E41DD4A90184376B9E7C4239FFB37C61F024CF82AD647006831076B977AF84A711309DE4708CBA4685C45984DCF0EC07D1F1C96388E04EEE257099B459D8CC9D92B39C9246A1F417F49EF96BC8CE14D05274499B2A25B2E1D2841301E2F2C6CA4D295AF9424ABB719092E2D4B4BB2AF92DADA05B4352048364DA6F0D0283A4C60823ED8BF1F1EF4EC0182455048B87B821D14B7C64E529683ADD9B4491C1768FA1E57BF5067AC10044CD2B0366FC3358EE301DC08354B5500E2075C4150317389034E9D40B015BC46170E7522122F14B1B73404DAAEA26309608EC2E30FAA7A02F01D46FE638FA539F5F9BE123C1932EAC29B874D29DA22AB585C18ACF8152D7E665A3AC9E77CC2BD6E7E06DCDD483E9E2ABAE32C574B9F1C1441909F71AD75B64CE05E855B82806FE3B2BC397172A012B4B031C783987495BE7C1686E996EF61F609641F56054509AA4DC2D593618F4CC1ABA4BCC706469FF4C7766CCFC9F6F10C61EF3967417184DF7EED698FBFDE138F77A1AA65B6B70EFED3AC31AA17BFE6026532956C3A4421FDDAAFC2AC1CDFEAE72326F4F80E1B91D5261A798821FFBE99F1348F61FFE9EADE028CC1D7DED75399E62EE24E0B92C7F9E10FC77C8A1F0C2E54756725F036BEF587542B10A4120A012FD5187398AFDABD2EE9B060E6A2C2D0521BCBD98EF495F82F99845B1B56818ABC32CE05A37A29339B07226F236774518689A65C800F8ABD72F7D5E92232EFDC57540CCF9507CD4947CBD791F4D06BB7FFEB35F2EB14C263496F3CF0C1CB1221B0FD12D985C4A624A39B383782B1E9C6FD9E4AA59A59771C541E0411FF8C462E6ECDA6EC1B91BA0703C3406D9E74943C60EBAB27B9D9B0E7076AC4DDBC8C26E590DB25A133DEE5EC07EF481CA8DFD4B48A49678FD4A6E6F0086B1D5AEC33E27E6F48957CE04265E0BD0C5130C125993536D6A659FB7CD07C2A5DB178985EA05D53E92AE3A49FDA995261D0273C4AB1F27F303DE03B04558A3383F0961D70AA03E8DFD91D47F3D34CCCDBB01E94DEE42D70F8B2ABD58C3D38B8763EEC73AEBF7D761691576C3058A35D30A09BB89EA7DCA87B075547206A7C9731BB4D531F515E1F10A5431F55DF28C2285FD7A7D237BD04E3729C072D19FD1C46C949FB492C32810246356A64EEC2071284F6691D13CDC60228E0550B299B68025F22C3AC0D27B89A065BF65AB05AC5308997D7A75F2CE30CD2D4222CE8500CE9735B00B144E840A46D8CE3D354EED8D7A31AD4400E41D73036F5936931C195C9CF405549578D9207F0BDCB48FFFCEAD9F0C154706C9263B796756C435466CF00AD98515B7852F2374AFA2AE1B12B9F9F393B55C4126D9E0E52F847A39A4794AC63212A4E9391584CD950B3A9A3B49142948BC1F1C0FBD2177432B6A1A6ACE2F4741193A4FCE3768C3B199D8F3D6C9EAF41BE37D03549194227EE298CF03577BB60DB7D4ACC9C899B9CD67DBB664D1317E09E9DE2068253CE844F72961279A3AF0D879152AC1CC10AB1DE5D17153AE373CE8AFA006E507A08F787DECF3BB197DE0C2E1E40761014AF798A8BE41BE5540DDB7B9E1183F93AC1683D8DE5B90E3EADB0B4D0AA5D673A33F015683FC411AD35B9798F3A64F4056B08FDD8064D08BF698C6E6F359B773B9C391AD7E01F61BAB936C641824728BD6F5E5AAC277B86C45C1627E1AD637ECEE737F4EE3B60D515E7E798117A9AD25E07587556071E2CD0055128CA1BBBF8117DB9D01DECCE303F2BB4A23466555E6B76F30BA93A31DED9DAC5ADBB5964D11F03E4A8A5D490963F90457E5416C53CB6E84C44E1A7FA203C601CEC6C221992FBDDC00B0E8E8D4EE724838FC1D17946BA4F7DF58EFD57773926DEF5C3E42AEBE3874309270A0F9072A70EFAC8F95DDCF9F740FA6C83EF41124DD29142A50FA9EFBCD1DB98A092BB55184268AEA3E42F17DC89BB60E32EE5E5F767AD19591E04A77D031D16EA4F89B5414B7AA680CEB137D5AB2D8B7EB9443AD39A284C7C4828551A2C7B138AA045D3246D9A7B25A0724E4A4763C1876DB6872474BE379B638B871342E1E1D69B7911A6CEFF4E3907CF852DE4EFCA9BD2B4A94D282EEE0E80C5103C989541DFB4BE202828D20F3DE05753AFB46476A76D75DF805BEDD4468D0BDA5AF52C831950A6CFAE6FA32B8DE4ED479DB5AC379BEAD825CCA636DC4D18E1DEEECF4582032E6FBCE473D4C8F75E66151C305F24446AF57CEBF618AFC280407F27E5524433A755F7075F7A48AC385CD005291A0E8B438432A63193C4A99C9707DB81C3A8CFC45446EAFAF5DC32A06195599BBAEB601927293035E9C3E3E382D5A57E7582516118CB907EA667417321EC4192F7C22C9CDF8891BBC86CF36D314ECB9E4E7E86E156756FE71E8E0BBA060F8A9BE0B0BA8FC8C3BAE684597614D5CF6CA901272414255531EEB27AF763DDA069EA2B3F881BAB28D10963C4AE61176D8F0AF6F5B8971B9C48880941EEACB7939D0574009B8BC8F7C1FEC4B6391E08B5CBED0B00BA358B3F26AF07B8007F40745FCD6AE47BF68822835B6F22B01B09BF3EB560A5AFE4071D72A465D297FBD59E3774AC1627CB84E3C10C072E5683D94129CBA5DD72BD9F9D7305F285BD9D30798927C113389B0839C56CDADF80F29A8C9899EF5BE75A9579A5002C0C3586F7D43C4C848CC8F2A2C8840089548FD5B55E361844C6CB177F98541EC5BCA54251E10F5A8FEB9A67548249D9CD2884DA20CB6F633C87932C199BF3413E2A41B6FE2089020EE90487C4E926A5ABA75BCB86BDF8390FFC3F4A0D3EBB7CD39C67471EBD5760DCD245F2D17072419A102F1CF07A0F23E16F5EFB5563CB83492FA70B86BB5433996AF8A1885C523E0501921672486B239A90304766ADB564C5A6777941C165A576F62F52275C63BFAE250F62A1EC3938B0317C328693432F3300A7B44F5B7FA08234BABA8CB44C5900A398B8FB2A971CB99E58A670F7609A22578FC13B395EFC5886C7D1A6888B27CF3792AE0F7CCBF7CC49135B814CF486C18F8ACF68FDA3A235B44F8493D979CE8EA303689A20521942CDB3149A9E65FCD18A2842CA5574435BA0F0541CF3C877B8D96393DC6C428CA130E468EBC5314DA4B77F9CB05F90CA00D4E086E4B51CED2D8F28EA9CF3F670EAC5248E11220ECEB71492A0C735979BCA1D0D1896E5071FDF861855B8DF3A20F90334EFA951C088210058A4A0A80D6D8C90FA2DD4EEF21CB10273D984884497C1947CA3539A8BDC1B5AEA4B67B584A7F00EE825632ED1235F7186A6AD5F6AF03E8B6661A28CDD403506923B83A9511DA91A43261153FA68C9073C7F2B879B47F6A3C1EC2DCFB0B5243D7D727EA34B0B86DEE8569C4E2A570E9BDD04C2A5D4E9EADE539405B629EE6D75AF05DE425E05F4FBB933980168A501E8C9A75CB4ECE33DF4BB3E382BC32999CBC37FE249FC5324E00132CC1EE4361FB9D0BCF24099A001207305CBEC600355D992A76BFC16E4533331613ED70A8F4866D8AAE343E6289DDCDB6D75D110B1509C458F7E565E3AB57BE78D278E9B771C5C34E05D5C1A2BB58EC5A3CC080E87CAF8896481C42E6CD279ECE47BF6D45C575507DC923CBA03A4AA32F292503382844A015CBFA035BEBA30FCE791787AA9A3A43CBFEE4F1A134F3B304EA18EFC18323B1693B083644D45C96E72DE8CC51F6162BED4BC984EFB26E61262FD9D0BBD45DEC927B0D5E5B46DE79C7595AE18945264DDEED3E5AEF9841AA0062438444D7ABF5F27E465B36755F133A0FA53C0B9FD457E4443AFD7BBFA287A8DAC5729E0075A3CA70ACFD778C3ECCB74833C044D263BA5D6E4EB51EA126D94D819CBF397A30F1928E18BE1ADA9740B64B664BC9BEF6DC8F56939CED001EF1605F7D4E14438C9E4B0C78E55608959FF32D139064CDFB73B4121C2D12E499AD7D2D7E7C93B66B10568D9D9783B9D1D4E690D5B30049307A5C51C5D1552B9C278D7C38EDA72D8E6E679ED8606A61118B4D6633461D6322303D24701B69CE118D3BFD8C53091F3896C7E3E2EAC6308398A71A9B2D88BBACF25E2F79A731808260E5C403DEE6E4A5BDF30B4F911EA36433DC5FE2F7481E07E3220BACA6BAECE34B2C1078700F6C4764B2C2B4FAE534D4A48587754155AB03CFDFDEB72E362E376AA83E01AFF5262351C538BD17DFDEF2A29C4E93067F6F0FEBA613DB4576D6D6737A8A491D44972CE5C95A71DE6389D8F4F131F3DEE8F8329A03B40262BC0A07F44448071A8B35AD30785C1F3D9B6FD1C75B7ABB78AA5792B2D18E0B08626A54D02388D3B44102B1EA3F8EECA7EE316D93AF5B8EBFB797EADAA8A42F23C8FBD41DC9EEA0F0A52A5E53A5FC15B012184284EAF441F95DBBA2FA258D7F88EB4F4B510B04E5718B06D6D2720253EEF8050229E9516F4E9D868E30FA812897FE399346D88C5D12575A959F7939E4191AC0727EDCF714C3366B734DEA5145A65A51EE5532266709FEDD07626653527CD38E86AB34E6473F507FDAD3346C074D38B827CA05CB87363D3E9335E1A691A7ECAA64548E71A6765B076445C9E39FE12A66C41D8F87FED2F16ABEDA14CC921D2B3AFD8E9BE0120084549DAA20A9FB13D7C5FAE45F557624F121E52B2848591123BFD998B9E8B8309C1BE38CB13A5ECCC93A478A815ED0D6BA2E9A6235B341416720C78BB61E14BE339DC2C54F368D59111345BEDFBC52CD8F2542A6C8D938E14CCA1BE85C2E79612C52A880302083F1650E397DAF662509A8E0A0D7AF8182D4422397FA0C068658D987AB5F1C3150D1B9C4F2E941546A7701F92B7EA98A63FA0D308B91D8374B87F86EEC78FB3FA8674647D29445BA6379B695B8199418807B6489F7F1492389AEAD94E62ABF4B2C04A956EBD8F545E0EFECF3F0192AAFA68CCEDFF80B86C335EFD8A70DC2A8E6D0ABC4EAC4123DF9DFD98E7B325BFBF10EA6B4EEE7832CAAC79D2F1D56C1BB25037DED19E58A2C92D7B97E9E7EDE57E59473D3482DF671006D94C8125B6D0FC4682398473E78DAC859186A9B79E4C54E522524C635EC82028B51C0A5BB2DE0ED823BB49E13407F4686CE4B6B5DDE26555FDA2DA86A8438772D68D223B1DA416ED4B3CBCCD0915C8A833292CFE48B8032A37B2A7CCCD600D0E72AF6F7821FF30B4BAE113A7084DB57934A3608C5B58B1C18E9AADE59AAAAEF163874EA9848C3BA84E13925477D7598D498F8838A2EF6128A480B7731978F9AC0E80D2A5E445BA9DAA2EE68E0E5DE2513BE7FD8F2EF96625B726D92C1A7B25912EC0A16A9AD043A68E73FF45DCE33C7C963ED1EF164505F992D7302B43936EFF47DB8252582D4D9EC847AE2DD20DFA7ECB0D3A83625D9828D7086EF05136C5FA3475A7D752CC0F58B64009A73F12F96BB0211EEB3BE6CAE2544C980DCE41BDE013E2D7F08EBCF7FCCECBD4E61A08F128C3B0D0322D8D1A318E8F82A3A0FB6E7B3605DF65F1D68AB0FDAE99D0113386B958726F24712984B9DDDB9E7C3739694D4E605DE1813CA03ECE28505B28F655A0D2755AB97F52C092B0FDF3D7EAE21001D8FE304B5488C2ECF4D13366B2E2BA11D360C7B83BA21304ECAE498706C9F1784F2FED235BBD2BEFB57C3A3B0EA467EE46D3311A918C9DEB726986BFB72F072320BC72B839065201F9676EDFE95FC083BED51798B230EA53E0871593B358438D5EAFA88FAE55AEB07D95089A6C4AFC8050FA537FFE383B3319A212AC11C191CAC99F202CBC7D3607969ED58224FE93C933C34C64E6009ACDE3717BB4E6E77F890E33EE254A19F24544F8BA1BB22FD462EF02F5085F1769519E3F3CA6876CF39978262E17B4F9C82BAD018A47F797895C43F6D3CBDC71A0CEC0EE0004E7682D49BE6F78FBE764AD97A8830C9CFEE354F751317E77305AE276FB54920AB2C1F33E864D881F8D43FB703A7EF38F9C5645AC5F639D720114BBB2E89EEBFFCF727C665412017E361EE2A5454A5C9E67D6770A50C891CBE1B9BE01C374627B1C4CBBB00F42C03F694903DEDD981B8278A65307FFBEDFE29FED1675879D0DEED52B9A8A240B7F2C5A41E14E9958643FC90DB98CB88278ADB4960EE49EF563D2F45327537D02321C90DA1564030D40F734CF333DC662382BC26FB717DCA9842F30BA05BE5C007A411C52FA7060950FFA3D1B1FC1DCD6F4ED62F01BD68DB97D22C5EEA6B63970445A39D3D1EA8899C224EBFC6BFE76538AF5B6CF435EB0D3811FAEF63C6C03E1CEE500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/CMMI10 cguidfix
/F2.1/CMMI10 renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 180 150 rc
0 150 m
180 150 l
180 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
0 150 m
180 150 l
180 0 l
0 0 l
h
0 150 m
f
0.80000001 0.80000001 0.80000001 sc
18.732489 96.495316 m
22.715853 92.355766 22.715853 85.644226 18.732489 81.504669 c
14.749144 77.365097 8.2908707 77.365097 4.3075256 81.504669 c
0.32416019 85.644226 0.32416019 92.355766 4.3075256 96.495316 c
8.2908707 100.6349 14.749144 100.6349 18.732489 96.495316 c
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -557 390 cm
575.73248 293.50467 m
579.71588 297.64423 579.71588 304.35577 575.73248 308.49533 c
571.74915 312.63492 565.29089 312.63492 561.3075 308.49533 c
557.32416 304.35577 557.32416 297.64423 561.3075 293.50467 c
565.29089 289.36511 571.74915 289.36511 575.73248 293.50467 c
S
0 i
0.80000001 0.80000001 0.80000001 sc
CM
18.732489 64.447319 m
22.715853 60.307766 22.715853 53.59623 18.732489 49.456673 c
14.749144 45.317097 8.2908707 45.317097 4.3075256 49.456673 c
0.32416019 53.59623 0.32416019 60.307766 4.3075256 64.447319 c
8.2908707 68.586899 14.749144 68.586899 18.732489 64.447319 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -557 390 cm
575.73248 325.55267 m
579.71588 329.69223 579.71588 336.40378 575.73248 340.54333 c
571.74915 344.68289 565.29089 344.68289 561.3075 340.54333 c
557.32416 336.40378 557.32416 329.69223 561.3075 325.55267 c
565.29089 321.41312 571.74915 321.41312 575.73248 325.55267 c
S
0 i
0.80000001 0.80000001 0.80000001 sc
CM
18.732489 19.295319 m
22.715853 15.155764 22.715853 8.4442253 18.732489 4.3046708 c
14.749144 0.16509534 8.2908707 0.16509534 4.3075256 4.3046708 c
0.32416019 8.4442253 0.32416019 15.155764 4.3075256 19.295319 c
8.2908707 23.434895 14.749144 23.434895 18.732489 19.295319 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -557 390 cm
575.73248 370.70468 m
579.71588 374.84424 579.71588 381.55579 575.73248 385.69534 c
571.74915 389.8349 565.29089 389.8349 561.3075 385.69534 c
557.32416 381.55579 557.32416 374.84424 561.3075 370.70468 c
565.29089 366.56509 571.74915 366.56509 575.73248 370.70468 c
S
/Cs1 SC
0 sc
0 i
0 -1 -1 0 370.14401 607.94397 cm
/F1.1[ 16 0 0 -16 0 0]sf
564.54401 360.37601 m
(!)s
/Cs2 SC
0.80000001 0.80000001 0.80000001 sc
CM
117.25249 104.67132 m
121.23586 100.53176 121.23586 93.820221 117.25249 89.680672 c
113.26914 85.541092 106.81087 85.541092 102.82752 89.680672 c
98.844162 93.820221 98.844162 100.53176 102.82752 104.67132 c
106.81087 108.81089 113.26914 108.81089 117.25249 104.67132 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -557 390 cm
674.2525 285.32867 m
678.23584 289.46823 678.23584 296.17978 674.2525 300.31934 c
670.26917 304.45889 663.81085 304.45889 659.82751 300.31934 c
655.84418 296.17978 655.84418 289.46823 659.82751 285.32867 c
663.81085 281.18912 670.26917 281.18912 674.2525 285.32867 c
S
0 i
0.80000001 0.80000001 0.80000001 sc
CM
117.25249 74.539322 m
121.23586 70.399765 121.23586 63.688225 117.25249 59.548672 c
113.26914 55.409096 106.81087 55.409096 102.82752 59.548672 c
98.844162 63.688225 98.844162 70.399765 102.82752 74.539322 c
106.81087 78.678894 113.26914 78.678894 117.25249 74.539322 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -557 390 cm
674.2525 315.46069 m
678.23584 319.60025 678.23584 326.31177 674.2525 330.45132 c
670.26917 334.59091 663.81085 334.59091 659.82751 330.45132 c
655.84418 326.31177 655.84418 319.60025 659.82751 315.46069 c
663.81085 311.32111 670.26917 311.32111 674.2525 315.46069 c
S
0 i
0.80000001 0.80000001 0.80000001 sc
CM
117.60449 37.095318 m
121.58785 32.955765 121.58785 26.244226 117.60449 22.104671 c
113.62115 17.965096 107.16287 17.965096 103.17953 22.104671 c
99.196159 26.244226 99.196159 32.955765 103.17953 37.095318 c
107.16287 41.234894 113.62115 41.234894 117.60449 37.095318 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -557 390 cm
674.60449 352.90469 m
678.58783 357.04425 678.58783 363.75577 674.60449 367.89532 c
670.62115 372.03491 664.1629 372.03491 660.1795 367.89532 c
656.19617 363.75577 656.19617 357.04425 660.1795 352.90469 c
664.1629 348.76511 670.62115 348.76511 674.60449 352.90469 c
S
0 i
0.80000001 0.80000001 0.80000001 sc
CM
18.732489 124.89532 m
22.715853 120.75577 22.715853 114.04423 18.732489 109.90467 c
14.749144 105.7651 8.2908707 105.7651 4.3075256 109.90467 c
0.32416019 114.04423 0.32416019 120.75577 4.3075256 124.89532 c
8.2908707 129.0349 14.749144 129.0349 18.732489 124.89532 c
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -557 390 cm
575.73248 265.10468 m
579.71588 269.24423 579.71588 275.95578 575.73248 280.09534 c
571.74915 284.23489 565.29089 284.23489 561.3075 280.09534 c
557.32416 275.95578 557.32416 269.24423 561.3075 265.10468 c
565.29089 260.96512 571.74915 260.96512 575.73248 265.10468 c
S
578.52771 274.65436 m
647.33453 288.7789 l
S
0 J
0 j
0 i
655.17114 290.38757 m
647.33453 288.7789 l
647.93781 285.84018 m
655.17114 290.38757 l
646.73126 291.71762 l
S
1 J
1 j
0.60000002 i
577.67535 277.27951 m
649.0694 313.77078 l
S
0 J
0 j
0 i
656.19287 317.41174 m
649.0694 313.77078 l
650.43475 311.09952 m
656.19287 317.41174 l
647.70404 316.44208 l
S
1 J
1 j
0.60000002 i
576.2749 279.48648 m
652.23456 346.93994 l
S
0 J
0 j
0 i
658.21643 352.25192 m
652.23456 346.93994 l
654.22656 344.69675 m
658.21643 352.25192 l
650.24255 349.18314 l
S
1 J
1 j
0.60000002 i
578.57117 376.3905 m
647.59753 363.96362 l
S
0 J
0 j
0 i
655.47095 362.54617 m
647.59753 363.96362 l
647.06598 361.01108 m
655.47095 362.54617 l
648.12903 366.91617 l
S
1 J
1 j
0.60000002 i
577.49896 373.16516 m
649.42596 332.83289 l
S
0 J
0 j
0 i
656.40381 328.92014 m
649.42596 332.83289 l
647.95868 330.21619 m
656.40381 328.92014 l
650.89325 335.44958 l
S
1 J
1 j
0.60000002 i
576.35425 371.41098 m
651.72418 306.0965 l
S
0 J
0 j
0 i
657.7699 300.85733 m
651.72418 306.0965 l
649.75946 303.82935 m
657.7699 300.85733 l
653.68884 308.36365 l
S
1 J
1 j
0.60000002 i
578.68787 300.15619 m
647.0061 294.48657 l
S
0 J
0 j
0 i
654.9787 293.82495 m
647.0061 294.48657 l
646.758 291.49686 m
654.9787 293.82495 l
647.25421 297.47632 l
S
1 J
1 j
0.60000002 i
578.49445 303.2229 m
647.40265 318.57965 l
S
0 J
0 j
0 i
655.21106 320.31982 m
647.40265 318.57965 l
648.05518 315.65149 m
655.21106 320.31982 l
646.75006 321.50781 l
S
1 J
1 j
0.60000002 i
577.35278 306.30652 m
650.073 349.99515 l
S
0 J
0 j
0 i
656.9306 354.11502 m
650.073 349.99515 l
651.61792 347.42355 m
656.9306 354.11502 l
648.52802 352.56674 l
S
1 J
1 j
0.60000002 i
578.01599 329.17096 m
648.37848 300.44318 l
S
0 J
0 j
0 i
655.78497 297.41925 m
648.37848 300.44318 l
647.24451 297.66574 m
655.78497 297.41925 l
649.51245 303.22061 l
S
1 J
1 j
0.60000002 i
578.67114 332.00818 m
647.04047 325.00467 l
S
0 J
0 j
0 i
654.99878 324.18945 m
647.04047 325.00467 l
646.73474 322.02029 m
654.99878 324.18945 l
647.34613 327.98907 l
S
1 J
1 j
0.60000002 i
578.37836 335.77524 m
647.992 355.03317 l
S
0 J
0 j
0 i
655.70239 357.1662 m
647.992 355.03317 l
648.79187 352.14178 m
655.70239 357.1662 l
647.19214 357.92459 l
S
/Cs1 SC
0 sc
639.60004 260 m
("#$%&'\()[ 10.368000 9.184000 4.736000 5.040000 13.648000 8.592000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
677.23865 292.99979 m
691.90149 293.25253 l
S
0 J
0 j
0 i
699.90027 293.39041 m
691.90149 293.25253 l
691.95319 290.25296 m
699.90027 293.39041 l
691.84979 296.25208 l
S
1 J
1 j
0.60000002 i
677.23926 323.08749 m
691.90082 323.27649 l
S
0 J
0 j
0 i
699.90015 323.37958 m
691.90082 323.27649 l
691.93951 320.27673 m
699.90015 323.37958 l
691.86218 326.27621 l
S
1 J
1 j
0.60000002 i
677.59058 360.5773 m
691.90149 360.82611 l
S
0 J
0 j
0 i
699.90027 360.96518 m
691.90149 360.82611 l
691.95367 357.82657 m
699.90027 360.96518 l
691.84937 363.82565 l
S
/Cs1 SC
0 sc
662.19202 274.87601 m
(\))s
/F1.1[ 12 0 0 -12 0 0]sf
662.85999 294.60001 m
(\))s
/F1.1[ 7 0 0 -7 0 0]sf
668.70001 297.228 m
(*)s
/F1.1[ 12 0 0 -12 0 0]sf
662.526 324.73199 m
(\))s
/F1.1[ 7 0 0 -7 0 0]sf
668.36603 327.36002 m
(+)s
/F1.1[ 12 0 0 -12 0 0]sf
662.85999 362.17599 m
(\))s
/F1.1[ 7 0 0 -7 0 0]sf
668.70001 364.80402 m
(,)s
Q
/Cs2 SC
0 0 0 sc
0.60000002 i
q
144.8 90.869995 12.400001 11.2 rc
2.2320001 0 0 2.3717647 -531.15625 -1415.5913 cm
/F2.1[ 9.9625998 0 0 9.9625998 0 0]sf
302.599 635.31812 m
(!)s
Q
/Cs1 SC
0 sc
0 i
q
0 0 180 150 rc
1 0 0 -1 -557 390 cm
/F1.1[ 16 0 0 -16 0 0]sf
715.70001 297.49402 m
(-\).)[ 4.144000 7.680000 0.000000 ] xS
Q
/Cs2 SC
0 0 0 sc
0.60000002 i
q
144.8 60.915997 12.400001 11.2 rc
2.2320001 0 0 2.3717647 -531.15625 -1445.5453 cm
/F2.1[ 9.9625998 0 0 9.9625998 0 0]sf
302.599 635.31812 m
(!)s
Q
/Cs1 SC
0 sc
0 i
q
0 0 180 150 rc
1 0 0 -1 -557 390 cm
/F1.1[ 16 0 0 -16 0 0]sf
715.70001 327.448 m
(-\).)[ 4.144000 7.680000 0.000000 ] xS
Q
/Cs2 SC
0 0 0 sc
0.60000002 i
q
144.8 23.293995 12.400001 11.2 rc
2.2320001 0 0 2.3717647 -531.15625 -1483.1672 cm
/F2.1[ 9.9625998 0 0 9.9625998 0 0]sf
302.599 635.31812 m
(!)s
Q
/Cs1 SC
0 sc
0 i
q
0 0 180 150 rc
1 0 0 -1 -557 390 cm
/F1.1[ 16 0 0 -16 0 0]sf
715.70001 365.07001 m
(-\).)[ 4.144000 7.680000 0.000000 ] xS
/F1.1[ 8 0 0 -8 0 0]sf
709.60004 303.39999 m
(*)s
709.60004 335.448 m
(+)s
709.60004 372.17801 m
(,)s
ep
end
%%Trailer
%%EOF
